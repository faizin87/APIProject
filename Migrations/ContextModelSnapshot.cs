// <auto-generated />
using System;
using APIProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIProject.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIProject.Models.SPUserCount", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Number");

                    b.ToTable("SPUserCounts");
                });

            modelBuilder.Entity("Database.BillDetailsTable", b =>
                {
                    b.Property<string>("BillDetailId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillId")
                        .HasColumnName("BillId")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BillDetailId");

                    b.HasIndex("BillId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Database.BillsTable", b =>
                {
                    b.Property<string>("BillId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("CurrencyId")
                        .HasColumnName("CurrencyId")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRecord")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationId")
                        .HasColumnName("DestinationId")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DiscountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceDue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguangeId")
                        .HasColumnName("LanguangeId")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("MeasurementId")
                        .HasColumnName("MeasurementId")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderId")
                        .HasColumnName("PurchaseOrderId")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BillId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("LanguangeId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Database.CurrenciesTable", b =>
                {
                    b.Property<string>("CurrencyId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Database.DestinationsTable", b =>
                {
                    b.Property<string>("DestinationId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("Database.LanguangesTable", b =>
                {
                    b.Property<string>("LanguangeId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguangeId");

                    b.ToTable("Languanges");
                });

            modelBuilder.Entity("Database.MeasurementsTable", b =>
                {
                    b.Property<string>("MeasurementId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeasurementId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("Database.PurchaseOrdersTable", b =>
                {
                    b.Property<string>("PurchaseOrderId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseOrderId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Database.UsersTable", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnName("Id")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.BillDetailsTable", b =>
                {
                    b.HasOne("Database.BillsTable", "Bills")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("Database.BillsTable", b =>
                {
                    b.HasOne("Database.CurrenciesTable", "Currencies")
                        .WithMany("Bills")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Database.DestinationsTable", "Destinations")
                        .WithMany("Bills")
                        .HasForeignKey("DestinationId");

                    b.HasOne("Database.LanguangesTable", "Languanges")
                        .WithMany("Bills")
                        .HasForeignKey("LanguangeId");

                    b.HasOne("Database.MeasurementsTable", "Measurements")
                        .WithMany("Bills")
                        .HasForeignKey("MeasurementId");

                    b.HasOne("Database.PurchaseOrdersTable", "PurchaseOrders")
                        .WithMany("Bills")
                        .HasForeignKey("PurchaseOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
